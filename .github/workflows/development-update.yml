name: Development Calendar Update

on:
  workflow_dispatch:
    inputs:
      MAX_FILMS:
        description: 'Limit number of films to scan'
        required: false
        default: '20'
  push:
    branches: [ development ]
    paths:
      - 'movie_scraper/**'
      - '.github/workflows/**'

jobs:
  update-calendar-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: development
        persist-credentials: true
        fetch-depth: 0

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Disable cache â€” remove DB unconditionally
      run: |
        rm -f data/cache.sqlite || true
        mkdir -p data
        echo "CACHE_DISABLED"

    - name: Install dependencies
      run: |
        set -euo pipefail
        python -m pip install --upgrade pip
        pip install aiohttp beautifulsoup4 lxml icalendar python-dateutil pytz aiosqlite

    - name: Run scraper (development, no cache)
      env:
        PYTHONPATH: .
        DISABLE_CACHE: "true"
        MOVIE_SCRAPER_LOG_LEVEL: DEBUG
        MOVIE_SCRAPER_MAX_FILMS: "${{ github.event.inputs.MAX_FILMS || '20' }}"
        MOVIE_SCRAPER_RATE_LIMIT: "5.0"
        MOVIE_SCRAPER_CACHE_TTL_DAYS: "0"
        OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        KINOPOISK_API_KEY: ${{ secrets.KINOPOISK_API_KEY }}
      run: |
        set -euo pipefail
        python -m py_compile movie_scraper/simple_scraper.py
        python -c "
        import asyncio, sys
        sys.path.insert(0, '.')
        from movie_scraper.simple_scraper import main
        asyncio.run(main())
        "

    - name: Show extended DIAG
      if: always()
      run: |
        echo "--- DIAG COPY (dev) ---"
        if [ -f docs/diag.txt ]; then tail -n 800 docs/diag.txt; else echo "no diag.txt"; fi
        echo "--- END DIAG ---"

    - name: Commit and push docs to development (no cache artifacts)
      if: github.ref == 'refs/heads/development'
      run: |
        set -euo pipefail
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add docs/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "[dev] Update docs (cache disabled)"
          git fetch origin development
          if ! git rebase origin/development; then
            git rebase --abort || true
            git merge -s ours -m "Resolve dev conflicts by keeping artifacts" origin/development
          fi
          git push origin HEAD:development
        fi
